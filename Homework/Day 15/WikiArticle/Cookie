Cookie（複數形態：Cookies），又稱「小甜餅」。類型為「小型文字檔案」[1]，指某些網站為了辨別使用者身分而儲存在用戶端（Client Side）上的資料（通常經過加密）。由網景公司的前雇員盧·蒙特利在1993年3月發明[2]。最初定義於RFC 2109，歷經RFC 2965，至現在的RFC 6265。目前使用最廣泛的Cookie標準卻不是RFC中定義的任何一個，而是在網景公司制定的標準上進行擴充後的產物。

Cookie 儲存在客戶端中，按在客戶端中的儲存位置，可分為記憶體 Cookie 和硬碟 Cookie。

記憶體 Cookie 由瀏覽器維護，儲存在記憶體中，瀏覽器關閉即消失，存在時間短暫。硬碟 Cookie 儲存在硬碟裡，有過期時間，除非使用者手動清理或到了過期時間，硬碟 Cookie 不會清除，存在時間較長。所以，按存在時間，可分為非持久 Cookie 和持久 Cookie。

因為 HTTP 協定是無狀態的，即伺服器不知道使用者上一次做了什麼，這嚴重阻礙了互動式 Web 應用程式的實現。在典型的網路購物場景中，使用者瀏覽了幾個頁面，買了一盒餅乾和兩瓶飲料。最後結帳時，由於 HTTP 的無狀態性，不通過額外的手段，伺服器並不知道使用者到底買了什麼，所以 Cookie 就是用來繞開 HTTP 的無狀態性的「額外手段」之一。伺服器可以設定或讀取 Cookies 中包含的資訊，藉此維護使用者跟伺服器對談中的狀態。

在剛才的購物場景中，當使用者選購了第一項商品，伺服器在向使用者傳送網頁的同時，還傳送了一段 Cookie，記錄著那項商品的資訊。當使用者存取另一個頁面，瀏覽器會把 Cookie 傳送給伺服器，於是伺服器知道他之前選購了什麼。使用者繼續選購飲料，伺服器就在原來那段 Cookie 裡追加新的商品資訊。結帳時，伺服器讀取傳送來的 Cookie 即可。

Cookie 另一個典型的應用是當登錄一個網站時，網站往往會請求使用者輸入使用者名稱和密碼，並且使用者可以勾選「下次自動登錄」。如果勾選了，那麼下次存取同一網站時，使用者會發現沒輸入使用者名稱和密碼就已經登錄了。這正是因為前一次登錄時，伺服器傳送了包含登錄憑據（使用者名稱加密碼的某種加密形式）的 Cookie 到使用者的硬碟上。第二次登錄時，如果該 Cookie 尚未到期，瀏覽器會傳送該 Cookie，伺服器驗證憑據，於是不必輸入使用者名稱和密碼就讓使用者登錄了。

使用者可以改變瀏覽器的設定，以使用 Cookie。同時一些瀏覽器內建或安裝開發者工具包允許使用者檢視、修改或刪除特定網站的 Cookie 資訊。

如果在一台電腦中安裝多個瀏覽器，每個瀏覽器都會以獨立的空間存放 Cookie。因為 Cookie 不但可確認使用者資訊，還包含電腦和瀏覽器的資訊，所以一個使用者使用不同的瀏覽器登錄或者用不同的電腦登錄，都會得到不同的 Cookie 資訊，另一方面，對於在同一台電腦上使用同一瀏覽器的多使用者群，Cookie 不會區分他們的身分，除非他們使用不同的使用者名稱登錄。

一些人反對 Cookie 在網路中的應用，他們的理由如下：

如果在同一台機器上使用多個瀏覽器，每個瀏覽器在不同的儲存位置儲存 Cookie，因此，Cookie 並不能定位到一個具體的人，而是使用者、電腦和瀏覽器的組合。

如果使用者在取得了一個 Cookie 之後，點擊了瀏覽器的「回退」按鍵，則瀏覽器的狀態和取得 Cookie 的狀態就出現了不一致。例如，如果網站基於 Cookie 技術實現了購物車的應用，當使用者添加了物品後點擊了「回退」按鍵，購物車的物品狀態可能並沒有發生變化。

Cookie 在某種程度上說已經嚴重危及使用者的隱私和安全。其中的一種方法是：一些公司的高層人員為了某種目的（譬如市場調研）而存取了從未去過的網站（通過搜尋引擎查到的），而這些網站包含了一種叫做網頁臭蟲的圖片，該圖片透明，且只有一個畫素大小（以便隱藏），它們的作用是將所有存取過此頁面的電腦寫入 Cookie。而後，電子商務網站將讀取這些 Cookie 資訊，並尋找寫入這些 Cookie 的網站，隨即傳送包含了針對這個網站的相關產品廣告的垃圾郵件給這些進階人員。

雖然Cookies沒有中電腦病毒那麼危險，但它仍包含了一些敏感訊息：使用者名稱、電腦名、使用的瀏覽器和曾經存取的網站。使用者不希望這些內容洩漏出去，尤其是當其中還包含有私人資訊的時候。

這並非危言聳聽，跨網站指令碼（Cross site scripting）可以達到此目的。在受到跨網站指令碼攻擊時，Cookie盜賊和Cookie投毒將竊取內容。一旦Cookie落入攻擊者手中，它將會重現其價值。

鑑於Cookie的局限和反對者的聲音，有如下一些替代方法：

