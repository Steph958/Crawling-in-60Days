檔案傳輸協定（英語：File Transfer Protocol，縮寫：FTP）是一個用於在電腦網路上在客戶端和伺服器之間進行檔案傳輸的應用層協定。檔案傳送（file transfer）和檔案存取（file access）之間的區別在於：前者由FTP提供，後者由如NFS等應用系統提供[1]。參考文獻 RFC 959 定義了此規範。

FTP是一個8位元的客戶端-伺服器協定，能操作任何類型的檔案而不需要進一步處理，就像MIME或Unicode一樣。但是，FTP有著極高的延時，這意味著，從開始請求到第一次接收需求資料之間的時間，會非常長；並且不時的必須執行一些冗長的登錄行程。

原始規範由 Abhay Bhushan 編寫，並於1971年4月16日作為 RFC 114 發布。直到1980年，FTP 才在TCP/IP的前身NCP上執行。該協定先被TCP/IP版本，RFC 765（1980年6月）取代，後來又被 RFC 959（1985年10月）所取代，這也是當前規範。RFC 959提出了若干標準修改，例如 RFC 1579（1994年2月）使 FTP 能夠穿越NAT與防火牆（被動模式），RFC 2228（1997年6月）提出安全擴充，RFC 2428（1998年9月）增加了對IPv6的支援，並定義了一種新型的被動模式。

FTP服務一般執行在20和21兩個埠。埠20用於在客戶端和伺服器之間傳輸資料流，而埠21用於傳輸控制流，並且是命令通向ftp伺服器的進口。當資料通過資料流傳輸時，控制流處於空閒狀態。而當控制流空閒很長時間後，客戶端的防火牆會將其對談置為逾時，這樣當大量資料通過防火牆時，會產生一些問題。此時，雖然檔案可以成功的傳輸，但因為控制對談，會被防火牆斷開；傳輸會產生一些錯誤。

FTP雖然可以被終端使用者直接使用，但是它是設計成被FTP客戶端程式所控制。

執行FTP服務的許多站點都開放匿名服務，在這種設定下，使用者不需要帳號就可以登錄伺服器，預設情況下，匿名使用者的使用者名稱是：「anonymous」。這個帳號不需要密碼，雖然通常要求輸入使用者的郵件位址作為認證密碼，但這只是一些細節或者此郵件位址根本不被確定，而是依賴於FTP伺服器的組態情況。 

FTP有兩種使用模式：主動和被動。主動模式要求客戶端和伺服器端同時打開並且監聽一個埠以建立連接。在這種情況下，客戶端由於安裝了防火牆會產生一些問題。所以，創立了被動模式。被動模式只要求伺服器端產生一個監聽相應埠的行程，這樣就可以繞過客戶端安裝了防火牆的問題。

一個主動模式的FTP連接建立要遵循以下步驟：

大部分常見的網頁瀏覽器都可以檢索FTP伺服器上代管的檔案，儘管它們並不支援擴充協定，如FTPS。[2]當瀏覽器存取FTP格式的URL時，將以Web檔案目錄顯示遠端伺服器上的可存取內容。使用類似FireFTP（英語：FireFTP）客戶端可獲得FTP擴充協定的完整支援。

Chrome和Firefox等主流瀏覽器都將計劃棄用對FTP的支援，[3]目前Chrome 82已移除對FTP的支援，[4]而Firefox將於則將於版本77中停止支援FTP。[5]

FTP URL 格式已在RFC 1738指定，格式為：ftp://[user[:password]@]host[:port]/url-path（方括號內為可選參數）。

有關指定使用者名稱和密碼的更多詳細資訊，可以在瀏覽器的文件中找到（例如Firefox[6]和Internet Explorer[7]）。預設情況下，大多數Web瀏覽器使用被動（PASV）模式，該模式更容易遍歷終端防火牆。

FTP不是一項安全的協定，並且具有許多安全漏洞[8]。1999年5月發布的RFC 2577中列出了以下幾個主要的漏洞：

通過FTP傳輸的流量不會被加密，所有傳輸通過明文進行的。任何能夠在網路上執行封包擷取（ 嗅探 ）的人都可以讀取使用者名稱、密碼、命令內容和資料[9][10]。此問題在加密機制（如TLS或SSL）產生之前的許多Internet協定規範（如SMTP 、Telnet 、POP和IMAP）中較為普遍[11]。

此問題的常見解決方案包括：

可以被傳送到FTP伺服器的FTP命令列表，包含由IETF在RFC 959中標準化的所有命令。需要注意的是，大多數命令列FTP使用者端都給使用者提供了額外的命令集。例如，GET是一個常見的用來下載檔案的使用者命令，用來替代原始的RETR命令。

包含由IETF在RFC 959中標準化的所有伺服器返回碼。回覆代碼是一個三位數值，第一個數字用於表示三種可能的結果之一————成功、失敗、表示錯誤或不完整的回覆。

FTPS是FTP標準的擴充，添加了安全通訊協定（SSL）以及其繼任者傳輸層安全性協定（TLS）的支援。

SSH檔案傳輸協定（縮寫：SFTP）可用於傳輸檔案並具有類似的使用者命令集，但使用Secure Shell協定（SSH）傳輸檔案。與FTP不同，它對命令和資料進行加密，防止密碼和敏感資訊通過網路公開傳輸。它無法與FTP相容。

小型檔案傳輸協定（Trivial File Transfer Protocol, TFTP），是一種於1981年在RFC 783中定義的簡化的檔案傳輸協定（FTP）。

簡單檔案傳輸協定（Simple File Transfer Protocol）由RFC 913定義，其複雜程度介於TFTP和FTP之間。它從未在網際網路上被廣泛接受。它通過埠115執行，支援三種類型的資料傳輸： ASCII 、 二進位和連續。該協定還支援使用使用者名稱和密碼登錄、資料夾和檔案管理（包括重新命名、刪除、上傳、下載）。

檔案傳輸協定（英語：File Transfer Protocol，縮寫：FTP）是一個用於在電腦網路上在客戶端和伺服器之間進行檔案傳輸的應用層協定。檔案傳送（file transfer）和檔案存取（file access）之間的區別在於：前者由FTP提供，後者由如NFS等應用系統提供[1]。參考文獻 RFC 959 定義了此規範。

FTP是一個8位元的客戶端-伺服器協定，能操作任何類型的檔案而不需要進一步處理，就像MIME或Unicode一樣。但是，FTP有著極高的延時，這意味著，從開始請求到第一次接收需求資料之間的時間，會非常長；並且不時的必須執行一些冗長的登錄行程。

原始規範由 Abhay Bhushan 編寫，並於1971年4月16日作為 RFC 114 發布。直到1980年，FTP 才在TCP/IP的前身NCP上執行。該協定先被TCP/IP版本，RFC 765（1980年6月）取代，後來又被 RFC 959（1985年10月）所取代，這也是當前規範。RFC 959提出了若干標準修改，例如 RFC 1579（1994年2月）使 FTP 能夠穿越NAT與防火牆（被動模式），RFC 2228（1997年6月）提出安全擴充，RFC 2428（1998年9月）增加了對IPv6的支援，並定義了一種新型的被動模式。

FTP服務一般執行在20和21兩個埠。埠20用於在客戶端和伺服器之間傳輸資料流，而埠21用於傳輸控制流，並且是命令通向ftp伺服器的進口。當資料通過資料流傳輸時，控制流處於空閒狀態。而當控制流空閒很長時間後，客戶端的防火牆會將其對談置為逾時，這樣當大量資料通過防火牆時，會產生一些問題。此時，雖然檔案可以成功的傳輸，但因為控制對談，會被防火牆斷開；傳輸會產生一些錯誤。

FTP雖然可以被終端使用者直接使用，但是它是設計成被FTP客戶端程式所控制。

執行FTP服務的許多站點都開放匿名服務，在這種設定下，使用者不需要帳號就可以登錄伺服器，預設情況下，匿名使用者的使用者名稱是：「anonymous」。這個帳號不需要密碼，雖然通常要求輸入使用者的郵件位址作為認證密碼，但這只是一些細節或者此郵件位址根本不被確定，而是依賴於FTP伺服器的組態情況。 

FTP有兩種使用模式：主動和被動。主動模式要求客戶端和伺服器端同時打開並且監聽一個埠以建立連接。在這種情況下，客戶端由於安裝了防火牆會產生一些問題。所以，創立了被動模式。被動模式只要求伺服器端產生一個監聽相應埠的行程，這樣就可以繞過客戶端安裝了防火牆的問題。

一個主動模式的FTP連接建立要遵循以下步驟：

大部分常見的網頁瀏覽器都可以檢索FTP伺服器上代管的檔案，儘管它們並不支援擴充協定，如FTPS。[2]當瀏覽器存取FTP格式的URL時，將以Web檔案目錄顯示遠端伺服器上的可存取內容。使用類似FireFTP（英語：FireFTP）客戶端可獲得FTP擴充協定的完整支援。

Chrome和Firefox等主流瀏覽器都將計劃棄用對FTP的支援，[3]目前Chrome 82已移除對FTP的支援，[4]而Firefox將於則將於版本77中停止支援FTP。[5]

FTP URL 格式已在RFC 1738指定，格式為：ftp://[user[:password]@]host[:port]/url-path（方括號內為可選參數）。

有關指定使用者名稱和密碼的更多詳細資訊，可以在瀏覽器的文件中找到（例如Firefox[6]和Internet Explorer[7]）。預設情況下，大多數Web瀏覽器使用被動（PASV）模式，該模式更容易遍歷終端防火牆。

FTP不是一項安全的協定，並且具有許多安全漏洞[8]。1999年5月發布的RFC 2577中列出了以下幾個主要的漏洞：

通過FTP傳輸的流量不會被加密，所有傳輸通過明文進行的。任何能夠在網路上執行封包擷取（ 嗅探 ）的人都可以讀取使用者名稱、密碼、命令內容和資料[9][10]。此問題在加密機制（如TLS或SSL）產生之前的許多Internet協定規範（如SMTP 、Telnet 、POP和IMAP）中較為普遍[11]。

此問題的常見解決方案包括：

可以被傳送到FTP伺服器的FTP命令列表，包含由IETF在RFC 959中標準化的所有命令。需要注意的是，大多數命令列FTP使用者端都給使用者提供了額外的命令集。例如，GET是一個常見的用來下載檔案的使用者命令，用來替代原始的RETR命令。

包含由IETF在RFC 959中標準化的所有伺服器返回碼。回覆代碼是一個三位數值，第一個數字用於表示三種可能的結果之一————成功、失敗、表示錯誤或不完整的回覆。

FTPS是FTP標準的擴充，添加了安全通訊協定（SSL）以及其繼任者傳輸層安全性協定（TLS）的支援。

SSH檔案傳輸協定（縮寫：SFTP）可用於傳輸檔案並具有類似的使用者命令集，但使用Secure Shell協定（SSH）傳輸檔案。與FTP不同，它對命令和資料進行加密，防止密碼和敏感資訊通過網路公開傳輸。它無法與FTP相容。

小型檔案傳輸協定（Trivial File Transfer Protocol, TFTP），是一種於1981年在RFC 783中定義的簡化的檔案傳輸協定（FTP）。

簡單檔案傳輸協定（Simple File Transfer Protocol）由RFC 913定義，其複雜程度介於TFTP和FTP之間。它從未在網際網路上被廣泛接受。它通過埠115執行，支援三種類型的資料傳輸： ASCII 、 二進位和連續。該協定還支援使用使用者名稱和密碼登錄、資料夾和檔案管理（包括重新命名、刪除、上傳、下載）。

檔案傳輸協定（英語：File Transfer Protocol，縮寫：FTP）是一個用於在電腦網路上在客戶端和伺服器之間進行檔案傳輸的應用層協定。檔案傳送（file transfer）和檔案存取（file access）之間的區別在於：前者由FTP提供，後者由如NFS等應用系統提供[1]。參考文獻 RFC 959 定義了此規範。

FTP是一個8位元的客戶端-伺服器協定，能操作任何類型的檔案而不需要進一步處理，就像MIME或Unicode一樣。但是，FTP有著極高的延時，這意味著，從開始請求到第一次接收需求資料之間的時間，會非常長；並且不時的必須執行一些冗長的登錄行程。

原始規範由 Abhay Bhushan 編寫，並於1971年4月16日作為 RFC 114 發布。直到1980年，FTP 才在TCP/IP的前身NCP上執行。該協定先被TCP/IP版本，RFC 765（1980年6月）取代，後來又被 RFC 959（1985年10月）所取代，這也是當前規範。RFC 959提出了若干標準修改，例如 RFC 1579（1994年2月）使 FTP 能夠穿越NAT與防火牆（被動模式），RFC 2228（1997年6月）提出安全擴充，RFC 2428（1998年9月）增加了對IPv6的支援，並定義了一種新型的被動模式。

FTP服務一般執行在20和21兩個埠。埠20用於在客戶端和伺服器之間傳輸資料流，而埠21用於傳輸控制流，並且是命令通向ftp伺服器的進口。當資料通過資料流傳輸時，控制流處於空閒狀態。而當控制流空閒很長時間後，客戶端的防火牆會將其對談置為逾時，這樣當大量資料通過防火牆時，會產生一些問題。此時，雖然檔案可以成功的傳輸，但因為控制對談，會被防火牆斷開；傳輸會產生一些錯誤。

FTP雖然可以被終端使用者直接使用，但是它是設計成被FTP客戶端程式所控制。

執行FTP服務的許多站點都開放匿名服務，在這種設定下，使用者不需要帳號就可以登錄伺服器，預設情況下，匿名使用者的使用者名稱是：「anonymous」。這個帳號不需要密碼，雖然通常要求輸入使用者的郵件位址作為認證密碼，但這只是一些細節或者此郵件位址根本不被確定，而是依賴於FTP伺服器的組態情況。 

FTP有兩種使用模式：主動和被動。主動模式要求客戶端和伺服器端同時打開並且監聽一個埠以建立連接。在這種情況下，客戶端由於安裝了防火牆會產生一些問題。所以，創立了被動模式。被動模式只要求伺服器端產生一個監聽相應埠的行程，這樣就可以繞過客戶端安裝了防火牆的問題。

一個主動模式的FTP連接建立要遵循以下步驟：

大部分常見的網頁瀏覽器都可以檢索FTP伺服器上代管的檔案，儘管它們並不支援擴充協定，如FTPS。[2]當瀏覽器存取FTP格式的URL時，將以Web檔案目錄顯示遠端伺服器上的可存取內容。使用類似FireFTP（英語：FireFTP）客戶端可獲得FTP擴充協定的完整支援。

Chrome和Firefox等主流瀏覽器都將計劃棄用對FTP的支援，[3]目前Chrome 82已移除對FTP的支援，[4]而Firefox將於則將於版本77中停止支援FTP。[5]

FTP URL 格式已在RFC 1738指定，格式為：ftp://[user[:password]@]host[:port]/url-path（方括號內為可選參數）。

有關指定使用者名稱和密碼的更多詳細資訊，可以在瀏覽器的文件中找到（例如Firefox[6]和Internet Explorer[7]）。預設情況下，大多數Web瀏覽器使用被動（PASV）模式，該模式更容易遍歷終端防火牆。

FTP不是一項安全的協定，並且具有許多安全漏洞[8]。1999年5月發布的RFC 2577中列出了以下幾個主要的漏洞：

通過FTP傳輸的流量不會被加密，所有傳輸通過明文進行的。任何能夠在網路上執行封包擷取（ 嗅探 ）的人都可以讀取使用者名稱、密碼、命令內容和資料[9][10]。此問題在加密機制（如TLS或SSL）產生之前的許多Internet協定規範（如SMTP 、Telnet 、POP和IMAP）中較為普遍[11]。

此問題的常見解決方案包括：

可以被傳送到FTP伺服器的FTP命令列表，包含由IETF在RFC 959中標準化的所有命令。需要注意的是，大多數命令列FTP使用者端都給使用者提供了額外的命令集。例如，GET是一個常見的用來下載檔案的使用者命令，用來替代原始的RETR命令。

包含由IETF在RFC 959中標準化的所有伺服器返回碼。回覆代碼是一個三位數值，第一個數字用於表示三種可能的結果之一————成功、失敗、表示錯誤或不完整的回覆。

FTPS是FTP標準的擴充，添加了安全通訊協定（SSL）以及其繼任者傳輸層安全性協定（TLS）的支援。

SSH檔案傳輸協定（縮寫：SFTP）可用於傳輸檔案並具有類似的使用者命令集，但使用Secure Shell協定（SSH）傳輸檔案。與FTP不同，它對命令和資料進行加密，防止密碼和敏感資訊通過網路公開傳輸。它無法與FTP相容。

小型檔案傳輸協定（Trivial File Transfer Protocol, TFTP），是一種於1981年在RFC 783中定義的簡化的檔案傳輸協定（FTP）。

簡單檔案傳輸協定（Simple File Transfer Protocol）由RFC 913定義，其複雜程度介於TFTP和FTP之間。它從未在網際網路上被廣泛接受。它通過埠115執行，支援三種類型的資料傳輸： ASCII 、 二進位和連續。該協定還支援使用使用者名稱和密碼登錄、資料夾和檔案管理（包括重新命名、刪除、上傳、下載）。

