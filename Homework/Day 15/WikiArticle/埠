通訊埠（英語：port），又稱為連接埠、埠、協定埠（protocol port）在電腦網路中是一種經由軟體建立的服務，在一個電腦作業系統中扮演通訊的端點（endpoint）。每個通訊埠都會與主機的IP位址及通訊協定關聯。通訊埠以16位元數字來表示，這被稱為通訊埠編號（port number）。

位於傳輸層的通訊協定通常需要指定埠號，例如在TCP/IP協定族之下的TCP與UDP協定。在應用層中，使用主從式架構的通訊協定，在每個通訊埠上提供多路複用服務（multiplexing service）。經由公認通訊埠號（well-known port numbers），通常可以辨認出這個連線使用的通訊協定，其中具代表性的是最基礎的1024個公認通訊埠號（well-known port numbers），例如Telnet協定預設使用23埠來連線，Secure Shell協定預設使用22埠，HTTP協定預設使用80埠，HTTPS協定預設使用443埠。

傳輸層協定，如傳輸控制協定（TCP）與使用者資料包協定（UDP），在封包表頭中，定義了來源埠號與目的埠號。一個通訊埠號使用16位元無符號整數（unsigned integer）來表示，其範圍介於0與65535之間。在TCP協定中，埠號0是被保留的，不可使用。1--1023 系統保留，只能由root使用者使用。1024---4999 由客戶端程式自由分配。5000---65535 由伺服器端程式自由分配在UDP協定中，來源埠號是可以選擇要不要填上，如果設為0，則代表沒有來源埠號。

在作業系統中，一個行程可以通過網路通訊端將它的輸入與輸出與一個特定的傳輸協定、一個通訊埠、一個IP位址關聯起來。這個關聯動作，稱為綁紮（binding），在這之後，就可以通過網路送出與接收資料。

在作業系統上運行的網路軟體，可以透過作業系統，利用各個不同的通訊埠，將資料傳送到網路上；作業系統也可以根據資料封包的IP位址以及埠號，將這些資料封包轉送到符合的行程去。

雖然使用同樣傳輸協定，但是特定的IP位址以及通訊埠的組合，只會被綁紮到單一的特定行程上。當使用同樣協定的多個程式，嘗試著綁紮在同一個IP位址下的相同通訊埠，就會產生一個常見的應用程式錯誤，這個錯誤有時候被稱為通訊埠衝突（port conflicts）。

在Linux的 /etc/services檔案，Windows的  C:\Windows\system32\drivers\etc\services檔案，記錄了網路服務名、埠號、協定、別名。

應用程式可以不直接使用埠號，通過函式getservbyname("server","tcp")取得埠號。如果服務想更改埠號只要更改/etc/services中的埠號就可以了，應用程式不需要做任何更改。可以通過函式getservbyport（htons（50），“tcp”）取得對應埠和規約上的服務名。

埠號有兩種用途：

網路防火牆或者閘道器還可提供通訊埠轉發（port forwarding），即NAT。

TCP/UDP埠列表

