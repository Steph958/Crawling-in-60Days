Web服務是一種服務導向架構的技術，透過標準的Web協議提供服務，目的是保證不同平台的應用服務可以互操作。

根據W3C的定義，Web服務（Web service）應當是一個軟體系統，用以支持網絡間不同機器的互動操作。網絡服務通常是許多應用程式接口（API）所組成的，它們透過網絡，例如國際網際網路（Internet）的遠程伺服機端，執行客戶所提交服務的請求。

儘管W3C的定義涵蓋諸多相異且無法介分的系統，不過通常我們指有關於主從式架構（Client-server）之間根據SOAP協議進行傳遞XML格式消息。無論定義還是實現，Web服務過程中會由伺服機提供一個機器可讀的描述（通常基於WSDL）以辨識伺服機所提供的WEB服務。另外，雖然WSDL不是SOAP服務端點的必要條件，但目前基於Java的主流Web服務開發框架往往需要WSDL實現客戶端的原始碼生成。一些工業標準化組織，比如WS-I，就在Web服務定義中強制包含SOAP和WSDL。

考慮到並沒某個獨立文檔包含一切相關內容，可採用模塊化的方式給出對Web服務的描述，但不能給出一個「絕對全面和準確」的定義。受外部環境和實現技術影響，各方給出的核心定義可能稍有出入，但通常包括：

這些標準由這些組織制訂：W3C負責XML、SOAP及WSDL；OASIS負責UDDI。

為提高Web服務間的互操作能力，WS-I還特別發布了WEB服務協議集（Profile）。協議集包含了一系列特定版本的核心定義（諸如SOAP和WSDL），以及對其使用上的限制與約束。WS-I還發布了用於部署協議集兼容WEB服務的測試工具及相關用例。

為擴展WEB服務能力，一些新的標準已經或正在被開發。這些標準通常被冠以WS字頭（Web Service的簡稱），以下是一個WS系列追加標準的不完全列表：

一直以來，W3C負責制定了不少WS追加定義，但近來此舉開始受到懷疑。一些人呼籲W3C作為網絡和語義網構建者應當把精力放在核心網絡本身，而不是為Web服務改換版本。特別是2007年2月的企業級Web服務論壇上，對W3C不再充當WEB服務定義者的訴求開始表面化。
此外，OASIS對Web服務擴展實施了許多標準化工作。包括Web服務資源框架以及WSDM。

Web服務實際上是一組工具，並有多種不同的方法呼叫之。三種最普遍的手段是：遠端程序呼叫（RPC），服務導向架構（SOA）以及表述性狀態轉移（REST）。

Web服務提供一個分布式函數或方法接口供用戶呼叫，這是一種比較傳統的方式。通常，在WSDL中對RPC接口進行定義（類似於早期的XML-RPC）。

儘管最初的Web服務廣泛採用RPC方式部署，但針對其過於緊密之耦合性的批評聲也隨之不斷。這是因為RPC式WEB服務實質上是利用一個簡單的映射，以把用戶請求直接轉化成為一個特定語言編寫的函數或方法。如今，多數服務提供商認定此種方式在未來將難有作為，在他們的推動下，WS-I基本協議集（WS-I Basic Profile）已不再支持遠端程序呼叫。

現在，業界比較關注的是遵從服務導向架構（Service-oriented architecture，SOA）概念來構築WEB服務。在服務導向架構中，通訊由消息驅動，而不再是某個動作（方法呼叫）。這種WEB服務也被稱作面向消息的服務。

SOA式WEB服務得到了大部分主要軟體供應商以及業界專家的支持和肯定。作為與RPC方式的最大差別，SOA方式更加關注如何去連接服務而不是去特定某個實現的細節。WSDL定義了聯絡服務的必要內容。

表述性狀態轉移式（Representational state transfer，REST）Web服務類似於HTTP或其他類似協議，它們把接口限定在一組廣為人知的標準動作中（比如HTTP的GET、PUT、DELETE）以供呼叫。此類WEB服務關注與那些穩定的資源的互動，而不是消息或動作。

此種服務可以透過WSDL來描述SOAP消息內容，透過HTTP限定動作接口；或者完全在SOAP中對動作進行抽象。

一些人抱怨，Web服務（具象化狀態轉移式除外）過於複雜，認為它太過於偏重那些大型軟體開發商，而不利於開源項目。但是至今不少開發工具已經具備自動化產生具象物件，已經減少web服務的呼叫難度。例如Microsoft Visual Studio、Eclipse等等整合開發環境（IDE）工具。使用者只需要專注於呼叫與實行。


Web服務的性能也時常是人們關注的一個問題。由於使用XML作為消息格式，並以SOAP封裝，由HTTP傳輸，Web服務始終處於較高的開銷狀態。不過目前一些新興技術正在試圖解決此一問題，諸如新的XML處理模型致力於解決XML這一部分的性能。

無論是在Web服務出現以前，還是現在，一直不斷有各種同類技術問世。比如，RMI作為這樣一種中間件系統就得到了廣泛部署。CORBA和DCOM則更加雄心壯志，兩者都嘗試將作用域波及到分布式對象，這一點也為Web服務所模仿。

這些類似方式往往藉助於XML-RPC和HTTP本身，而不依靠SOAP封裝參數。

